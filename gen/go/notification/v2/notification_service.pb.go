// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: notification/v2/notification_service.proto

package notificationv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PostSlackMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Channel:
	//
	//	*PostSlackMessageRequest_Name
	//	*PostSlackMessageRequest_Id
	Channel isPostSlackMessageRequest_Channel `protobuf_oneof:"channel"`
	// Types that are assignable to Message:
	//
	//	*PostSlackMessageRequest_Text
	//	*PostSlackMessageRequest_Blocks
	Message isPostSlackMessageRequest_Message `protobuf_oneof:"message"`
}

func (x *PostSlackMessageRequest) Reset() {
	*x = PostSlackMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_v2_notification_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSlackMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSlackMessageRequest) ProtoMessage() {}

func (x *PostSlackMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v2_notification_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSlackMessageRequest.ProtoReflect.Descriptor instead.
func (*PostSlackMessageRequest) Descriptor() ([]byte, []int) {
	return file_notification_v2_notification_service_proto_rawDescGZIP(), []int{0}
}

func (m *PostSlackMessageRequest) GetChannel() isPostSlackMessageRequest_Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (x *PostSlackMessageRequest) GetName() string {
	if x, ok := x.GetChannel().(*PostSlackMessageRequest_Name); ok {
		return x.Name
	}
	return ""
}

func (x *PostSlackMessageRequest) GetId() string {
	if x, ok := x.GetChannel().(*PostSlackMessageRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (m *PostSlackMessageRequest) GetMessage() isPostSlackMessageRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *PostSlackMessageRequest) GetText() string {
	if x, ok := x.GetMessage().(*PostSlackMessageRequest_Text); ok {
		return x.Text
	}
	return ""
}

func (x *PostSlackMessageRequest) GetBlocks() string {
	if x, ok := x.GetMessage().(*PostSlackMessageRequest_Blocks); ok {
		return x.Blocks
	}
	return ""
}

type isPostSlackMessageRequest_Channel interface {
	isPostSlackMessageRequest_Channel()
}

type PostSlackMessageRequest_Name struct {
	// チャンネル名
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type PostSlackMessageRequest_Id struct {
	// チャンネル ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*PostSlackMessageRequest_Name) isPostSlackMessageRequest_Channel() {}

func (*PostSlackMessageRequest_Id) isPostSlackMessageRequest_Channel() {}

type isPostSlackMessageRequest_Message interface {
	isPostSlackMessageRequest_Message()
}

type PostSlackMessageRequest_Text struct {
	// シンプルなテキスト
	Text string `protobuf:"bytes,3,opt,name=text,proto3,oneof"`
}

type PostSlackMessageRequest_Blocks struct {
	// Block 形式 (JSON)
	Blocks string `protobuf:"bytes,4,opt,name=blocks,proto3,oneof"`
}

func (*PostSlackMessageRequest_Text) isPostSlackMessageRequest_Message() {}

func (*PostSlackMessageRequest_Blocks) isPostSlackMessageRequest_Message() {}

type PostSlackMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimestampId string `protobuf:"bytes,1,opt,name=timestamp_id,json=timestampId,proto3" json:"timestamp_id,omitempty"`
}

func (x *PostSlackMessageResponse) Reset() {
	*x = PostSlackMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_v2_notification_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSlackMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSlackMessageResponse) ProtoMessage() {}

func (x *PostSlackMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v2_notification_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSlackMessageResponse.ProtoReflect.Descriptor instead.
func (*PostSlackMessageResponse) Descriptor() ([]byte, []int) {
	return file_notification_v2_notification_service_proto_rawDescGZIP(), []int{1}
}

func (x *PostSlackMessageResponse) GetTimestampId() string {
	if x != nil {
		return x.TimestampId
	}
	return ""
}

type ReplySlackMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Channel:
	//
	//	*ReplySlackMessageRequest_Name
	//	*ReplySlackMessageRequest_Id
	Channel isReplySlackMessageRequest_Channel `protobuf_oneof:"channel"`
	// Types that are assignable to Message:
	//
	//	*ReplySlackMessageRequest_Text
	//	*ReplySlackMessageRequest_Blocks
	Message     isReplySlackMessageRequest_Message `protobuf_oneof:"message"`
	TimestampId string                             `protobuf:"bytes,5,opt,name=timestamp_id,json=timestampId,proto3" json:"timestamp_id,omitempty"`
}

func (x *ReplySlackMessageRequest) Reset() {
	*x = ReplySlackMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_v2_notification_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplySlackMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplySlackMessageRequest) ProtoMessage() {}

func (x *ReplySlackMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v2_notification_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplySlackMessageRequest.ProtoReflect.Descriptor instead.
func (*ReplySlackMessageRequest) Descriptor() ([]byte, []int) {
	return file_notification_v2_notification_service_proto_rawDescGZIP(), []int{2}
}

func (m *ReplySlackMessageRequest) GetChannel() isReplySlackMessageRequest_Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (x *ReplySlackMessageRequest) GetName() string {
	if x, ok := x.GetChannel().(*ReplySlackMessageRequest_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ReplySlackMessageRequest) GetId() string {
	if x, ok := x.GetChannel().(*ReplySlackMessageRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (m *ReplySlackMessageRequest) GetMessage() isReplySlackMessageRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ReplySlackMessageRequest) GetText() string {
	if x, ok := x.GetMessage().(*ReplySlackMessageRequest_Text); ok {
		return x.Text
	}
	return ""
}

func (x *ReplySlackMessageRequest) GetBlocks() string {
	if x, ok := x.GetMessage().(*ReplySlackMessageRequest_Blocks); ok {
		return x.Blocks
	}
	return ""
}

func (x *ReplySlackMessageRequest) GetTimestampId() string {
	if x != nil {
		return x.TimestampId
	}
	return ""
}

type isReplySlackMessageRequest_Channel interface {
	isReplySlackMessageRequest_Channel()
}

type ReplySlackMessageRequest_Name struct {
	// チャンネル名
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type ReplySlackMessageRequest_Id struct {
	// チャンネル ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*ReplySlackMessageRequest_Name) isReplySlackMessageRequest_Channel() {}

func (*ReplySlackMessageRequest_Id) isReplySlackMessageRequest_Channel() {}

type isReplySlackMessageRequest_Message interface {
	isReplySlackMessageRequest_Message()
}

type ReplySlackMessageRequest_Text struct {
	// シンプルなテキスト
	Text string `protobuf:"bytes,3,opt,name=text,proto3,oneof"`
}

type ReplySlackMessageRequest_Blocks struct {
	// Block 形式 (JSON)
	Blocks string `protobuf:"bytes,4,opt,name=blocks,proto3,oneof"`
}

func (*ReplySlackMessageRequest_Text) isReplySlackMessageRequest_Message() {}

func (*ReplySlackMessageRequest_Blocks) isReplySlackMessageRequest_Message() {}

type ReplySlackMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplySlackMessageResponse) Reset() {
	*x = ReplySlackMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_v2_notification_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplySlackMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplySlackMessageResponse) ProtoMessage() {}

func (x *ReplySlackMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v2_notification_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplySlackMessageResponse.ProtoReflect.Descriptor instead.
func (*ReplySlackMessageResponse) Descriptor() ([]byte, []int) {
	return file_notification_v2_notification_service_proto_rawDescGZIP(), []int{3}
}

var File_notification_v2_notification_service_proto protoreflect.FileDescriptor

var file_notification_v2_notification_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x32, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x22, 0x87, 0x01,
	0x0a, 0x17, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x09, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x18, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x18, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x6c, 0x61,
	0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xea, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x50, 0x6f, 0x73,
	0x74, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6c,
	0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x6c, 0x61, 0x63, 0x6b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53,
	0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x47,
	0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x79, 0x61,
	0x6d, 0x61, 0x32, 0x30, 0x30, 0x30, 0x2f, 0x78, 0x6f, 0x6f, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x3b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notification_v2_notification_service_proto_rawDescOnce sync.Once
	file_notification_v2_notification_service_proto_rawDescData = file_notification_v2_notification_service_proto_rawDesc
)

func file_notification_v2_notification_service_proto_rawDescGZIP() []byte {
	file_notification_v2_notification_service_proto_rawDescOnce.Do(func() {
		file_notification_v2_notification_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_notification_v2_notification_service_proto_rawDescData)
	})
	return file_notification_v2_notification_service_proto_rawDescData
}

var file_notification_v2_notification_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_notification_v2_notification_service_proto_goTypes = []interface{}{
	(*PostSlackMessageRequest)(nil),   // 0: notification.v2.PostSlackMessageRequest
	(*PostSlackMessageResponse)(nil),  // 1: notification.v2.PostSlackMessageResponse
	(*ReplySlackMessageRequest)(nil),  // 2: notification.v2.ReplySlackMessageRequest
	(*ReplySlackMessageResponse)(nil), // 3: notification.v2.ReplySlackMessageResponse
}
var file_notification_v2_notification_service_proto_depIdxs = []int32{
	0, // 0: notification.v2.NotificationService.PostSlackMessage:input_type -> notification.v2.PostSlackMessageRequest
	2, // 1: notification.v2.NotificationService.ReplySlackMessage:input_type -> notification.v2.ReplySlackMessageRequest
	1, // 2: notification.v2.NotificationService.PostSlackMessage:output_type -> notification.v2.PostSlackMessageResponse
	3, // 3: notification.v2.NotificationService.ReplySlackMessage:output_type -> notification.v2.ReplySlackMessageResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_notification_v2_notification_service_proto_init() }
func file_notification_v2_notification_service_proto_init() {
	if File_notification_v2_notification_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notification_v2_notification_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSlackMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_v2_notification_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSlackMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_v2_notification_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplySlackMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_v2_notification_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplySlackMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_notification_v2_notification_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PostSlackMessageRequest_Name)(nil),
		(*PostSlackMessageRequest_Id)(nil),
		(*PostSlackMessageRequest_Text)(nil),
		(*PostSlackMessageRequest_Blocks)(nil),
	}
	file_notification_v2_notification_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ReplySlackMessageRequest_Name)(nil),
		(*ReplySlackMessageRequest_Id)(nil),
		(*ReplySlackMessageRequest_Text)(nil),
		(*ReplySlackMessageRequest_Blocks)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notification_v2_notification_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_v2_notification_service_proto_goTypes,
		DependencyIndexes: file_notification_v2_notification_service_proto_depIdxs,
		MessageInfos:      file_notification_v2_notification_service_proto_msgTypes,
	}.Build()
	File_notification_v2_notification_service_proto = out.File
	file_notification_v2_notification_service_proto_rawDesc = nil
	file_notification_v2_notification_service_proto_goTypes = nil
	file_notification_v2_notification_service_proto_depIdxs = nil
}
